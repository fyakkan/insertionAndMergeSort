import java.util.Arrays;
import java.util.Random;

public class insertion
{
    public static void main(String [] args)
    {
        int array_size = 1000;
        long start_time, end_time, elapsed_time;

        int array [] = new int[array_size];
        int array2 [] = new int[array_size];

        Random rand = new Random();
        rand.setSeed(System.currentTimeMillis());

        //initialize elements of array with random integers
        for (int i = 0; i < array.length; i++)
            array[i] = rand.nextInt(100);

        for (int i = 0; i < array2.length; i++)
            array2[i] = rand.nextInt(100);

        print_array(array);
        insertion_sort(array);
        print_array(array);
        System.out.println("-------------------------------");

        print_array(array2);
        insertion_sort_reverse(array2);
        print_array(array2);

        //part 1(c)

        //part 1(d)

        //part 1(e)
    }

    //part 1(a) implementing insertion sort algorithm as a method below
    public static void insertion_sort(int [] A)
    {
        int n = A.length;
        for (int i = 1; i < n; ++i) {
            int key = A[i];
            int j = i - 1;
            while (j >= 0 && A[j] > key) {
                A[j + 1] = A[j];
                j = j - 1;
            }
            A[j + 1] = key;
        }
    }

    //part 1(b) implementing insertion sort algorithm that sorts in descending order as a method below
    public static void insertion_sort_reverse(int [] A)
    {
        int n = A.length;
        for (int i = 1; i < n; ++i) {
            int key = A[i];
            int j = i - 1;
            while (j >= 0 && A[j] < key) {
                A[j + 1] = A[j];
                j = j - 1;
            }
            A[j + 1] = key;
        }
    }



    //prints the elements of the array A on the screen
    public static void print_array(int [] A)
    {
        System.out.printf("[");
        for (int i = 0; i < A.length-1; i++)
        {
            System.out.printf("%d, ", A[i]);
        }

        System.out.printf("%d]\n", A[A.length-1]);

    }
}

